// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team28.web;

import ee.itcollege.i377.team28.entities.ADMIN_ALLUVUS;
import ee.itcollege.i377.team28.entities.RIIGI_ADMIN_YKSUS;
import ee.itcollege.i377.team28.entities.RIIGI_ADMIN_YKSUSE_LIIK;
import ee.itcollege.i377.team28.entities.RUUMIYKSUS;
import ee.itcollege.i377.team28.entities.VAEOSA;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect RIIGI_ADMIN_YKSUSController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST)
    public String RIIGI_ADMIN_YKSUSController.create(@Valid RIIGI_ADMIN_YKSUS RIIGI_ADMIN_YKSUS, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("RIIGI_ADMIN_YKSUS", RIIGI_ADMIN_YKSUS);
            addDateTimeFormatPatterns(uiModel);
            return "riigi_admin_yksus/create";
        }
        uiModel.asMap().clear();
        RIIGI_ADMIN_YKSUS.persist();
        return "redirect:/riigi_admin_yksus/" + encodeUrlPathSegment(RIIGI_ADMIN_YKSUS.getRiigi_admin_yksus_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String RIIGI_ADMIN_YKSUSController.createForm(Model uiModel) {
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS", new RIIGI_ADMIN_YKSUS());
        addDateTimeFormatPatterns(uiModel);
        return "riigi_admin_yksus/create";
    }
    
    @RequestMapping(value = "/{riigi_admin_yksus_id}", method = RequestMethod.GET)
    public String RIIGI_ADMIN_YKSUSController.show(@PathVariable("riigi_admin_yksus_id") Long riigi_admin_yksus_id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("riigi_admin_yksus", RIIGI_ADMIN_YKSUS.findRIIGI_ADMIN_YKSUS(riigi_admin_yksus_id));
        uiModel.addAttribute("itemId", riigi_admin_yksus_id);
        return "riigi_admin_yksus/show";
    }
    
    @RequestMapping(method = RequestMethod.GET)
    public String RIIGI_ADMIN_YKSUSController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            uiModel.addAttribute("riigi_admin_yksus", RIIGI_ADMIN_YKSUS.findRIIGI_ADMIN_YKSUSEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) RIIGI_ADMIN_YKSUS.countRIIGI_ADMIN_YKSUS() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("riigi_admin_yksus", RIIGI_ADMIN_YKSUS.findAllRIIGI_ADMIN_YKSUS());
        }
        addDateTimeFormatPatterns(uiModel);
        return "riigi_admin_yksus/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT)
    public String RIIGI_ADMIN_YKSUSController.update(@Valid RIIGI_ADMIN_YKSUS RIIGI_ADMIN_YKSUS, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("RIIGI_ADMIN_YKSUS", RIIGI_ADMIN_YKSUS);
            addDateTimeFormatPatterns(uiModel);
            return "riigi_admin_yksus/update";
        }
        uiModel.asMap().clear();
        RIIGI_ADMIN_YKSUS.merge();
        return "redirect:/riigi_admin_yksus/" + encodeUrlPathSegment(RIIGI_ADMIN_YKSUS.getRiigi_admin_yksus_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{riigi_admin_yksus_id}", params = "form", method = RequestMethod.GET)
    public String RIIGI_ADMIN_YKSUSController.updateForm(@PathVariable("riigi_admin_yksus_id") Long riigi_admin_yksus_id, Model uiModel) {
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS", RIIGI_ADMIN_YKSUS.findRIIGI_ADMIN_YKSUS(riigi_admin_yksus_id));
        addDateTimeFormatPatterns(uiModel);
        return "riigi_admin_yksus/update";
    }
    
    @RequestMapping(value = "/{riigi_admin_yksus_id}", method = RequestMethod.DELETE)
    public String RIIGI_ADMIN_YKSUSController.delete(@PathVariable("riigi_admin_yksus_id") Long riigi_admin_yksus_id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        RIIGI_ADMIN_YKSUS.findRIIGI_ADMIN_YKSUS(riigi_admin_yksus_id).remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/riigi_admin_yksus";
    }
    
    @ModelAttribute("admin_alluvus")
    public Collection<ADMIN_ALLUVUS> RIIGI_ADMIN_YKSUSController.populateADMIN_ALLUVUS() {
        return ADMIN_ALLUVUS.findAllADMIN_ALLUVUS();
    }
    
    @ModelAttribute("riigi_admin_yksus")
    public Collection<RIIGI_ADMIN_YKSUS> RIIGI_ADMIN_YKSUSController.populateRIIGI_ADMIN_YKSUS() {
        return RIIGI_ADMIN_YKSUS.findAllRIIGI_ADMIN_YKSUS();
    }
    
    @ModelAttribute("riigi_admin_yksuse_liiks")
    public Collection<RIIGI_ADMIN_YKSUSE_LIIK> RIIGI_ADMIN_YKSUSController.populateRIIGI_ADMIN_YKSUSE_LIIKs() {
        return RIIGI_ADMIN_YKSUSE_LIIK.findAllRIIGI_ADMIN_YKSUSE_LIIKs();
    }
    
    @ModelAttribute("ruumiyksus")
    public Collection<RUUMIYKSUS> RIIGI_ADMIN_YKSUSController.populateRUUMIYKSUS() {
        return RUUMIYKSUS.findAllRUUMIYKSUS();
    }
    
    @ModelAttribute("vaeosas")
    public Collection<VAEOSA> RIIGI_ADMIN_YKSUSController.populateVAEOSAS() {
        return VAEOSA.findAllVAEOSAS();
    }
    
    void RIIGI_ADMIN_YKSUSController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS_alates_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS_kuni_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS_avatud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS_muudetud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("RIIGI_ADMIN_YKSUS_suletud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    String RIIGI_ADMIN_YKSUSController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
