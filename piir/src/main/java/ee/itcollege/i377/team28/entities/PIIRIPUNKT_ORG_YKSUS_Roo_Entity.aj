// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team28.entities;

import ee.itcollege.i377.team28.entities.PIIRIPUNKT_ORG_YKSUS;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PIIRIPUNKT_ORG_YKSUS_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager PIIRIPUNKT_ORG_YKSUS.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer PIIRIPUNKT_ORG_YKSUS.version;
    
    public Integer PIIRIPUNKT_ORG_YKSUS.getVersion() {
        return this.version;
    }
    
    public void PIIRIPUNKT_ORG_YKSUS.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void PIIRIPUNKT_ORG_YKSUS.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void PIIRIPUNKT_ORG_YKSUS.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            PIIRIPUNKT_ORG_YKSUS attached = PIIRIPUNKT_ORG_YKSUS.findPIIRIPUNKT_ORG_YKSUS(this.piiripunkt_org_yksus_id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void PIIRIPUNKT_ORG_YKSUS.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void PIIRIPUNKT_ORG_YKSUS.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public PIIRIPUNKT_ORG_YKSUS PIIRIPUNKT_ORG_YKSUS.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        PIIRIPUNKT_ORG_YKSUS merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager PIIRIPUNKT_ORG_YKSUS.entityManager() {
        EntityManager em = new PIIRIPUNKT_ORG_YKSUS().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long PIIRIPUNKT_ORG_YKSUS.countPIIRIPUNKT_ORG_YKSUS() {
        return entityManager().createQuery("SELECT COUNT(o) FROM PIIRIPUNKT_ORG_YKSUS o", Long.class).getSingleResult();
    }
    
    public static List<PIIRIPUNKT_ORG_YKSUS> PIIRIPUNKT_ORG_YKSUS.findAllPIIRIPUNKT_ORG_YKSUS() {
        return entityManager().createQuery("SELECT o FROM PIIRIPUNKT_ORG_YKSUS o", PIIRIPUNKT_ORG_YKSUS.class).getResultList();
    }
    
    public static PIIRIPUNKT_ORG_YKSUS PIIRIPUNKT_ORG_YKSUS.findPIIRIPUNKT_ORG_YKSUS(Long piiripunkt_org_yksus_id) {
        if (piiripunkt_org_yksus_id == null) return null;
        return entityManager().find(PIIRIPUNKT_ORG_YKSUS.class, piiripunkt_org_yksus_id);
    }
    
    public static List<PIIRIPUNKT_ORG_YKSUS> PIIRIPUNKT_ORG_YKSUS.findPIIRIPUNKT_ORG_YKSUSEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM PIIRIPUNKT_ORG_YKSUS o", PIIRIPUNKT_ORG_YKSUS.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
