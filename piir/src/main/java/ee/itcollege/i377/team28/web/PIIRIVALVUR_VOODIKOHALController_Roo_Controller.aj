// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team28.web;

import ee.itcollege.i377.team28.entities.PIIRIVALVUR;
import ee.itcollege.i377.team28.entities.PIIRIVALVUR_VOODIKOHAL;
import ee.itcollege.i377.team28.entities.VOODIKOHT;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect PIIRIVALVUR_VOODIKOHALController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST)
    public String PIIRIVALVUR_VOODIKOHALController.create(@Valid PIIRIVALVUR_VOODIKOHAL PIIRIVALVUR_VOODIKOHAL, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL", PIIRIVALVUR_VOODIKOHAL);
            addDateTimeFormatPatterns(uiModel);
            return "piirivalvur_voodikohals/create";
        }
        uiModel.asMap().clear();
        PIIRIVALVUR_VOODIKOHAL.persist();
        return "redirect:/piirivalvur_voodikohals/" + encodeUrlPathSegment(PIIRIVALVUR_VOODIKOHAL.getPiirivalvur_voodikohal_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String PIIRIVALVUR_VOODIKOHALController.createForm(Model uiModel) {
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL", new PIIRIVALVUR_VOODIKOHAL());
        addDateTimeFormatPatterns(uiModel);
        return "piirivalvur_voodikohals/create";
    }
    
    @RequestMapping(value = "/{piirivalvur_voodikohal_id}", method = RequestMethod.GET)
    public String PIIRIVALVUR_VOODIKOHALController.show(@PathVariable("piirivalvur_voodikohal_id") Long piirivalvur_voodikohal_id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("piirivalvur_voodikohal", PIIRIVALVUR_VOODIKOHAL.findPIIRIVALVUR_VOODIKOHAL(piirivalvur_voodikohal_id));
        uiModel.addAttribute("itemId", piirivalvur_voodikohal_id);
        return "piirivalvur_voodikohals/show";
    }
    
    @RequestMapping(method = RequestMethod.GET)
    public String PIIRIVALVUR_VOODIKOHALController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            uiModel.addAttribute("piirivalvur_voodikohals", PIIRIVALVUR_VOODIKOHAL.findPIIRIVALVUR_VOODIKOHALEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) PIIRIVALVUR_VOODIKOHAL.countPIIRIVALVUR_VOODIKOHALs() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("piirivalvur_voodikohals", PIIRIVALVUR_VOODIKOHAL.findAllPIIRIVALVUR_VOODIKOHALs());
        }
        addDateTimeFormatPatterns(uiModel);
        return "piirivalvur_voodikohals/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT)
    public String PIIRIVALVUR_VOODIKOHALController.update(@Valid PIIRIVALVUR_VOODIKOHAL PIIRIVALVUR_VOODIKOHAL, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL", PIIRIVALVUR_VOODIKOHAL);
            addDateTimeFormatPatterns(uiModel);
            return "piirivalvur_voodikohals/update";
        }
        uiModel.asMap().clear();
        PIIRIVALVUR_VOODIKOHAL.merge();
        return "redirect:/piirivalvur_voodikohals/" + encodeUrlPathSegment(PIIRIVALVUR_VOODIKOHAL.getPiirivalvur_voodikohal_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{piirivalvur_voodikohal_id}", params = "form", method = RequestMethod.GET)
    public String PIIRIVALVUR_VOODIKOHALController.updateForm(@PathVariable("piirivalvur_voodikohal_id") Long piirivalvur_voodikohal_id, Model uiModel) {
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL", PIIRIVALVUR_VOODIKOHAL.findPIIRIVALVUR_VOODIKOHAL(piirivalvur_voodikohal_id));
        addDateTimeFormatPatterns(uiModel);
        return "piirivalvur_voodikohals/update";
    }
    
    @RequestMapping(value = "/{piirivalvur_voodikohal_id}", method = RequestMethod.DELETE)
    public String PIIRIVALVUR_VOODIKOHALController.delete(@PathVariable("piirivalvur_voodikohal_id") Long piirivalvur_voodikohal_id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        PIIRIVALVUR_VOODIKOHAL.findPIIRIVALVUR_VOODIKOHAL(piirivalvur_voodikohal_id).remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/piirivalvur_voodikohals";
    }
    
    @ModelAttribute("piirivalvurs")
    public Collection<PIIRIVALVUR> PIIRIVALVUR_VOODIKOHALController.populatePIIRIVALVURS() {
        return PIIRIVALVUR.findAllPIIRIVALVURS();
    }
    
    @ModelAttribute("piirivalvur_voodikohals")
    public Collection<PIIRIVALVUR_VOODIKOHAL> PIIRIVALVUR_VOODIKOHALController.populatePIIRIVALVUR_VOODIKOHALs() {
        return PIIRIVALVUR_VOODIKOHAL.findAllPIIRIVALVUR_VOODIKOHALs();
    }
    
    @ModelAttribute("voodikohts")
    public Collection<VOODIKOHT> PIIRIVALVUR_VOODIKOHALController.populateVOODIKOHTS() {
        return VOODIKOHT.findAllVOODIKOHTS();
    }
    
    void PIIRIVALVUR_VOODIKOHALController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL_alates_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL_kuni_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL_avatud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL_muudetud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("PIIRIVALVUR_VOODIKOHAL_suletud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    String PIIRIVALVUR_VOODIKOHALController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
