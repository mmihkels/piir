// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team28.entities;

import ee.itcollege.i377.team28.entities.OBJEKTI_SEADUS_INTSIDENDIS;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect OBJEKTI_SEADUS_INTSIDENDIS_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager OBJEKTI_SEADUS_INTSIDENDIS.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer OBJEKTI_SEADUS_INTSIDENDIS.version;
    
    public Integer OBJEKTI_SEADUS_INTSIDENDIS.getVersion() {
        return this.version;
    }
    
    public void OBJEKTI_SEADUS_INTSIDENDIS.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void OBJEKTI_SEADUS_INTSIDENDIS.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void OBJEKTI_SEADUS_INTSIDENDIS.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            OBJEKTI_SEADUS_INTSIDENDIS attached = OBJEKTI_SEADUS_INTSIDENDIS.findOBJEKTI_SEADUS_INTSIDENDIS(this.objekti_seadus_intsidendis_id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void OBJEKTI_SEADUS_INTSIDENDIS.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void OBJEKTI_SEADUS_INTSIDENDIS.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public OBJEKTI_SEADUS_INTSIDENDIS OBJEKTI_SEADUS_INTSIDENDIS.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        OBJEKTI_SEADUS_INTSIDENDIS merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager OBJEKTI_SEADUS_INTSIDENDIS.entityManager() {
        EntityManager em = new OBJEKTI_SEADUS_INTSIDENDIS().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long OBJEKTI_SEADUS_INTSIDENDIS.countOBJEKTI_SEADUS_INTSIDENDISs() {
        return entityManager().createQuery("SELECT COUNT(o) FROM OBJEKTI_SEADUS_INTSIDENDIS o", Long.class).getSingleResult();
    }
    
    public static List<OBJEKTI_SEADUS_INTSIDENDIS> OBJEKTI_SEADUS_INTSIDENDIS.findAllOBJEKTI_SEADUS_INTSIDENDISs() {
        return entityManager().createQuery("SELECT o FROM OBJEKTI_SEADUS_INTSIDENDIS o", OBJEKTI_SEADUS_INTSIDENDIS.class).getResultList();
    }
    
    public static OBJEKTI_SEADUS_INTSIDENDIS OBJEKTI_SEADUS_INTSIDENDIS.findOBJEKTI_SEADUS_INTSIDENDIS(Long objekti_seadus_intsidendis_id) {
        if (objekti_seadus_intsidendis_id == null) return null;
        return entityManager().find(OBJEKTI_SEADUS_INTSIDENDIS.class, objekti_seadus_intsidendis_id);
    }
    
    public static List<OBJEKTI_SEADUS_INTSIDENDIS> OBJEKTI_SEADUS_INTSIDENDIS.findOBJEKTI_SEADUS_INTSIDENDISEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM OBJEKTI_SEADUS_INTSIDENDIS o", OBJEKTI_SEADUS_INTSIDENDIS.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
