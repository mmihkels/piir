// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team28.web;

import ee.itcollege.i377.team28.entities.AMET_VAEOSAS;
import ee.itcollege.i377.team28.entities.ORG_YKSUS;
import ee.itcollege.i377.team28.entities.PIIRILOIGU_HALDAJA;
import ee.itcollege.i377.team28.entities.PIIRIPUNKTI_ALLUVUS;
import ee.itcollege.i377.team28.entities.RIIGI_ADMIN_YKSUS;
import ee.itcollege.i377.team28.entities.VAEOSA;
import ee.itcollege.i377.team28.entities.VAEOSA_ALLUVUS;
import ee.itcollege.i377.team28.entities.VAHTKOND;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.Long;
import java.lang.String;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect VAEOSAController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.POST)
    public String VAEOSAController.create(@Valid VAEOSA VAEOSA, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("VAEOSA", VAEOSA);
            addDateTimeFormatPatterns(uiModel);
            return "vaeosas/create";
        }
        uiModel.asMap().clear();
        VAEOSA.persist();
        return "redirect:/vaeosas/" + encodeUrlPathSegment(VAEOSA.getVaeosa_ID_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(params = "form", method = RequestMethod.GET)
    public String VAEOSAController.createForm(Model uiModel) {
        uiModel.addAttribute("VAEOSA", new VAEOSA());
        addDateTimeFormatPatterns(uiModel);
        return "vaeosas/create";
    }
    
    @RequestMapping(value = "/{vaeosa_ID_id}", method = RequestMethod.GET)
    public String VAEOSAController.show(@PathVariable("vaeosa_ID_id") Long vaeosa_ID_id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("vaeosa", VAEOSA.findVAEOSA(vaeosa_ID_id));
        uiModel.addAttribute("itemId", vaeosa_ID_id);
        return "vaeosas/show";
    }
    
    @RequestMapping(method = RequestMethod.GET)
    public String VAEOSAController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            uiModel.addAttribute("vaeosas", VAEOSA.findVAEOSAEntries(page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) VAEOSA.countVAEOSAS() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("vaeosas", VAEOSA.findAllVAEOSAS());
        }
        addDateTimeFormatPatterns(uiModel);
        return "vaeosas/list";
    }
    
    @RequestMapping(method = RequestMethod.PUT)
    public String VAEOSAController.update(@Valid VAEOSA VAEOSA, BindingResult bindingResult, Model uiModel, HttpServletRequest httpServletRequest) {
        if (bindingResult.hasErrors()) {
            uiModel.addAttribute("VAEOSA", VAEOSA);
            addDateTimeFormatPatterns(uiModel);
            return "vaeosas/update";
        }
        uiModel.asMap().clear();
        VAEOSA.merge();
        return "redirect:/vaeosas/" + encodeUrlPathSegment(VAEOSA.getVaeosa_ID_id().toString(), httpServletRequest);
    }
    
    @RequestMapping(value = "/{vaeosa_ID_id}", params = "form", method = RequestMethod.GET)
    public String VAEOSAController.updateForm(@PathVariable("vaeosa_ID_id") Long vaeosa_ID_id, Model uiModel) {
        uiModel.addAttribute("VAEOSA", VAEOSA.findVAEOSA(vaeosa_ID_id));
        addDateTimeFormatPatterns(uiModel);
        return "vaeosas/update";
    }
    
    @RequestMapping(value = "/{vaeosa_ID_id}", method = RequestMethod.DELETE)
    public String VAEOSAController.delete(@PathVariable("vaeosa_ID_id") Long vaeosa_ID_id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        VAEOSA.findVAEOSA(vaeosa_ID_id).remove();
        uiModel.asMap().clear();
        uiModel.addAttribute("page", (page == null) ? "1" : page.toString());
        uiModel.addAttribute("size", (size == null) ? "10" : size.toString());
        return "redirect:/vaeosas";
    }
    
    @ModelAttribute("amet_vaeosass")
    public Collection<AMET_VAEOSAS> VAEOSAController.populateAMET_VAEOSASs() {
        return AMET_VAEOSAS.findAllAMET_VAEOSASs();
    }
    
    @ModelAttribute("org_yksus")
    public Collection<ORG_YKSUS> VAEOSAController.populateORG_YKSUS() {
        return ORG_YKSUS.findAllORG_YKSUS();
    }
    
    @ModelAttribute("piiriloigu_haldajas")
    public Collection<PIIRILOIGU_HALDAJA> VAEOSAController.populatePIIRILOIGU_HALDAJAs() {
        return PIIRILOIGU_HALDAJA.findAllPIIRILOIGU_HALDAJAs();
    }
    
    @ModelAttribute("piiripunkti_alluvus")
    public Collection<PIIRIPUNKTI_ALLUVUS> VAEOSAController.populatePIIRIPUNKTI_ALLUVUS() {
        return PIIRIPUNKTI_ALLUVUS.findAllPIIRIPUNKTI_ALLUVUS();
    }
    
    @ModelAttribute("riigi_admin_yksus")
    public Collection<RIIGI_ADMIN_YKSUS> VAEOSAController.populateRIIGI_ADMIN_YKSUS() {
        return RIIGI_ADMIN_YKSUS.findAllRIIGI_ADMIN_YKSUS();
    }
    
    @ModelAttribute("vaeosas")
    public Collection<VAEOSA> VAEOSAController.populateVAEOSAS() {
        return VAEOSA.findAllVAEOSAS();
    }
    
    @ModelAttribute("vaeosa_alluvus")
    public Collection<VAEOSA_ALLUVUS> VAEOSAController.populateVAEOSA_ALLUVUS() {
        return VAEOSA_ALLUVUS.findAllVAEOSA_ALLUVUS();
    }
    
    @ModelAttribute("vahtkonds")
    public Collection<VAHTKOND> VAEOSAController.populateVAHTKONDS() {
        return VAHTKOND.findAllVAHTKONDS();
    }
    
    void VAEOSAController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("VAEOSA_alates_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("VAEOSA_kuni_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("VAEOSA_avatud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("VAEOSA_muudetud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("VAEOSA_suletud_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    String VAEOSAController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
